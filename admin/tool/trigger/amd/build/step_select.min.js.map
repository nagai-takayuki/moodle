{"version":3,"sources":["../src/step_select.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Templates","ajax","Fragment","Notification","StepSelect","contextid","modalObj","spinner","getParentFormSteps","stepsjson","val","steps","JSON","parse","setCurrentFormSteps","stringify","updateModalBody","params","jsonformdata","setBody","loadFragment","updateTable","stepData","rows","map","step","stepidx","name","typedesc","stepdesc","steporder","render","then","html","setupTableHandlers","fail","exception","message","processModalForm","e","preventDefault","$stepform","getRoot","find","curstep","serializeArray","reduce","finalobj","field","startsWith","value","text","call","methodname","args","stepclass","serialize","done","push","length","hide","renderStepForm","updateStepOptions","events","empty","append","each","i","event","class","getStepsOfType","valfilter","response","getEventName","eventname","steptype","formdefaults","formsubmission","setupModalChangeHandlers","on","swapSteps","pos1","pos2","step1","step2","$rows","$row1","eq","$row2","row1height","height","row2height","row1color","css","row2color","idx","row","style","position","top","transition","cell","window","setTimeout","backgroundColor","fadeTo","promise","always","slice","removeClass","data","show","splice","forEach","closest","fadeOut","init","context","get_string","title","create","type","types","SAVE_CANCEL","body","large","modal","save","hidden"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Workflow step select javascript.\n *\n * @module     tool_trigger/workflow\n * @package    tool_trigger\n * @class      Workflow\n * @copyright  2018 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.4\n */\n\ndefine(\n  ['jquery', 'core/str', 'core/modal_factory', 'core/modal_events','core/templates', 'core/ajax', 'core/fragment',\n      'core/notification'],\n        function ($, Str, ModalFactory, ModalEvents, Templates, ajax, Fragment, Notification) {\n\n            /**\n             * Module level variables.\n             */\n            var StepSelect = {};\n            var contextid;\n            var modalObj;\n            var spinner = '<p class=\"text-center\">'\n                + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i><span class=\"sr-only\">Loading...</span>'\n                + '</p>';\n\n            /**\n             * Retrieves the steps serialized to JSON in the stepsjson hidden form field.\n             */\n            function getParentFormSteps() {\n                var stepsjson = $('[name=stepjson]').val();\n                var steps = [];\n                if (stepsjson !== '') {\n                    steps = JSON.parse(stepsjson);\n                }\n                return steps;\n            }\n\n            /**\n             * Updates the steps stored in the hidden form field\n             */\n            function setCurrentFormSteps(steps) {\n                $('[name=stepjson]').val(JSON.stringify(steps));\n                // Set the flag field that indicates there was a change to the steps.\n                $('[name=isstepschanged]').val(1);\n            }\n\n            /**\n             * Updates the body of the modal window.\n             *\n             * @private\n             */\n            function updateModalBody() {\n                var formdata = {};\n                var params = {jsonformdata: JSON.stringify(formdata)};\n                modalObj.setBody(spinner);\n                modalObj.setBody(Fragment.loadFragment('tool_trigger', 'new_base_form', contextid, params));\n            }\n\n            function updateTable(stepData) {\n                // Format data for template.\n                // Filter out only the fields we want for each step, and make sure the \"steporder\" values\n                // are correct.\n                var rows = stepData.map(\n                    function(step, stepidx) {\n                        return {\n                            name: step.name,\n                            typedesc: step.typedesc,\n                            stepdesc: step.stepdesc,\n                            steporder: stepidx\n                        };\n                    }\n                );\n                var tableData = {'rows': rows};\n                Templates.render(\n                    'tool_trigger/workflow_steps',\n                    tableData\n                ).then(function(html) {\n                    $('#steps-table').html(html);\n                    setupTableHandlers();\n                }).fail(function() {\n                    Notification.exception({message: 'Error updating steps table'});\n                });\n            }\n\n            /**\n             * Updates Moodle form with selected information.\n             * @private\n             */\n            function processModalForm(e) {\n                e.preventDefault(); // Stop modal from closing.\n\n                // Form data.\n                var $stepform = modalObj.getRoot().find('form');\n                // Use jQuery().serializeArray() to collect the values of all the form fields.\n                // Then convert from its array-of-objects output format into a single object.\n                var curstep = $stepform.serializeArray().reduce(\n                    function(finalobj, field) {\n\n                        // Filter out the sesskey and formslib system fields.\n                        if (field.name !== 'sesskey' && !field.name.startsWith('_qf__')) {\n                            finalobj[field.name] = field.value;\n                        }\n                        return finalobj;\n                    },\n                    {}\n                );\n\n                // Add the description string for the step class and type, in order to make later rendering\n                // easier...\n                curstep['stepdesc'] = $('[name=stepclass] option:selected').text();\n                curstep['typedesc'] = $('[name=type] option:selected').text();\n\n                // Submit form via ajax to do server side validation.\n                ajax.call([{\n                    methodname: 'tool_trigger_validate_form',\n                    args: {\n                        stepclass: curstep['stepclass'],\n                        jsonformdata: JSON.stringify($stepform.serialize())\n                    },\n                }])[0].done(function() {\n\n                    // Validation succeeded! Update the parent form's hidden steps data, and update\n                    // the table.\n                    var steps = getParentFormSteps();\n\n                    if (curstep.steporder >= 0) {\n                        // If we were editing an existing step, swap it into place in the list.\n                        steps[curstep.steporder] = curstep;\n                    } else {\n                        // If we were creating a new step, add it to the end of the list.\n                        steps.push(curstep);\n                        curstep.steporder = steps.length - 1;\n                    }\n                    setCurrentFormSteps(steps); // Update steps in hidden form field\n                    updateTable(steps); // Update table in workflow form.\n                    modalObj.hide(); // Hide the modal.\n\n                }).fail(function() {\n\n                    // Validation failed! Don't close the modal, don't update anything on the parent\n                    // form.\n                    renderStepForm(curstep['type'], curstep['stepclass'], '', $stepform.serialize());\n                });\n            }\n\n            /**\n             * Updates the step list in the step modal edit form,\n             * with only the steps that correspond to the selected\n             * step type.\n             *\n             * @param array events Array of steps to update selection with.\n             */\n            function updateStepOptions(events) {\n\n                // First clear the existing options in the select element.\n                $('[name=stepclass]').empty().append($('<option>', {\n                    value: '',\n                    text : 'Choose...'\n                }));\n\n                // Update the select with applicable events.\n                $.each(events, function (i, event) {\n                    $('[name=stepclass]').append($('<option>', {\n                        value: event.class,\n                        text : event.name\n                    }));\n                });\n            }\n\n            /**\n             * Gets a list of filtered steps based on the selected step type.\n             * Triggers updating of the form step select element.\n             *\n             * @param string varfilter The filter area.\n             */\n            function getStepsOfType(valfilter) {\n                ajax.call([\n                    { methodname: 'tool_trigger_step_by_type', args: {'steptype': valfilter} },\n                ])[0].done(function(response) {\n                    updateStepOptions(response);\n                });\n            }\n\n            /**\n             * Get the event name that triggers this workflow.\n             *\n             * @return {string} The event name.\n             */\n            function getEventName() {\n                var eventname = $('[name=eventtomonitor]').val();\n\n                return eventname;\n            }\n\n            /**\n             * Render the correct form for a particular step (or type of step)\n             *\n             * @param {string} steptype The step category (triggers, filters, lookups)\n             * @param {string} stepclass The step class (\\tool_trigger\\steps\\triggers\\http_post_trigger_step, ...)\n             * @param {Object} formdefaults Default values to display in a new form\n             * @param {string} formsubmission Serialized (via jQuery().serialize()) form submission values to load\n             * into the form, when re-displaying a form that has failed validation.\n             */\n            function renderStepForm(steptype, stepclass, formdefaults, formsubmission, steporder) {\n                if (formdefaults === undefined) {\n                    formdefaults = '';\n                }\n\n                if (formsubmission === undefined) {\n                    formsubmission = '';\n                }\n\n                if (steporder === undefined) {\n                    steporder = 0;\n                }\n\n                modalObj.setBody(spinner);\n                modalObj.setBody(\n                    Fragment.loadFragment(\n                        'tool_trigger',\n                        'new_step_form',\n                        contextid,\n                        {\n                            'steptype' : steptype,\n                            'stepclass' : stepclass,\n                            'defaults': JSON.stringify(formdefaults),\n                            'ajaxformdata': formsubmission,\n                            'event': getEventName(),\n                            'existingsteps': JSON.stringify(getParentFormSteps()),\n                            'steporder': steporder,\n                        }\n                    )\n                );\n            }\n\n            /**\n             *\n             */\n            function setupModalChangeHandlers() {\n                // Add event listener for step type select onchange.\n                $('body').on('change', '[name=type]', function() {\n                    getStepsOfType(this.value);\n                });\n\n                // Add event listener for step  select onchange.\n                $('body').on('change', '[name=stepclass]', function() {\n                    var steptype = $('[name=type]').val();\n                    var stepclass = this.value;\n                    renderStepForm(steptype, stepclass, '', '', -1);\n                });\n            }\n\n            function swapSteps(steps, pos1, pos2){\n                // Milliseconds of animation.\n                var duration = 400;\n\n                // Swap the steps in the JSON list.\n                var step1 = steps[pos1];\n                var step2 = steps[pos2];\n                step1.steporder = pos2;\n                step2.steporder = pos2;\n                steps[pos1] = step2;\n                steps[pos2] = step1;\n\n                var $rows = $('tr.tool-trigger-step-table-row');\n                var $row1 = $rows.eq(pos1);\n                var $row2 = $rows.eq(pos2);\n                var row1height = $row1.height();\n                var row2height = $row2.height();\n                var row1color = $row1.find('th').css('background-color');\n                var row2color = $row2.find('th').css('background-color');\n\n                $([$row1, $row2]).each(function(idx, row){\n                    row[0].style.position = 'relative';\n                    row[0].style.top = '0';\n                    row[0].style.transition = 'top ' + duration + 'ms';\n                    row.find('th,td').each(function(idx, cell){\n                        cell.style.transition = 'background-color ' + duration + 'ms';\n                    });\n                });\n                window.setTimeout(function(){\n                    $row1[0].style.top = row2height + \"px\";\n                    $row1.find('td,th').each(function(idx, cell){\n                        cell.style.backgroundColor = row2color;\n                    });\n                    $row2[0].style.top = (-1 * row1height) + \"px\";\n                    $row2.find('td,th').each(function(idx, cell){\n                        cell.style.backgroundColor = row1color;\n                    });\n                });\n\n                // Also fade out the up/down buttons on the rows, because otherwise it can\n                // be visually confusing.\n                $row1.find('.tool-trigger-step-movedown').fadeTo(duration, 0.1);\n                // Replace the form once the animation is finished.\n                $row2.find('.tool-trigger-step-moveup')\n                  .fadeTo(duration, 0.1)\n                  .promise()\n                  .always(\n                    function(){\n                        setCurrentFormSteps(steps);\n                        updateTable(steps);\n                    }\n                  );\n\n            }\n\n            /**\n             * Display the action icons for the steps table, and set up\n             * handlers on them to make them clickable.\n             */\n            function setupTableHandlers() {\n                $('.tool-trigger-step-moveup')\n                // Don't show an up arrow for the top row of the table.\n                .slice(1)\n                .removeClass('tool-trigger-initial-hidden')\n                .on('click', function() {\n                    var steps = getParentFormSteps();\n\n                    // Already at the top. Can't move any higher!\n                    var steporder = $(this).data('steporder');\n                    if (steporder === 0) {\n                        return true;\n                    }\n\n                    swapSteps(steps, steporder - 1 , steporder);\n\n                    return true;\n                });\n\n                $('.tool-trigger-step-movedown')\n                // Don't show a down arrow for the bottom row of the table.\n                .slice(0, -1)\n                .removeClass('tool-trigger-initial-hidden')\n                .on('click', function() {\n                    var steps = getParentFormSteps();\n\n                    // Already at the end. Can't move any further!\n                    var steporder = $(this).data('steporder');\n                    if (steporder >= steps.length - 1) {\n                        return true;\n                    }\n\n                    swapSteps(steps, steporder, steporder + 1);\n\n                    return true;\n                });\n\n                $('.tool-trigger-step-edit')\n                .removeClass('tool-trigger-initial-hidden')\n                .on('click', function() {\n\n                    modalObj.setBody(spinner);\n                    modalObj.show();\n                    var steps = getParentFormSteps();\n                    var steporder = $(this).data('steporder');\n                    var step = steps[steporder];\n\n                    renderStepForm(\n                        step['type'],\n                        step['stepclass'],\n                        step,\n                        undefined,\n                        steporder\n                    );\n                });\n\n                $('.tool-trigger-step-delete')\n                .removeClass('tool-trigger-initial-hidden')\n                .on('click', function() {\n                    var steps = getParentFormSteps();\n\n                    // Remove it from the array.\n                    var steporder = $(this).data('steporder');\n                    steps.splice(steporder, 1);\n                    // Adjust the steporder of all subsequent steps.\n                    if (steporder <= steps.length) {\n                        steps.slice(steporder).forEach(\n                            function(step) {\n                                step.steporder = step.steporder - 1;\n                            }\n                        );\n                    }\n\n                    setCurrentFormSteps(steps);\n                    $(this).closest('tr').fadeOut(\n                        function(){\n                            updateTable(steps);\n                        }\n                    );\n\n                    return true;\n                });\n            }\n\n            /**\n             * Initialise the class.\n             *\n             * @public\n             */\n            StepSelect.init = function(context) {\n                // Save the context ID in a closure variable.\n                contextid = context;\n\n                // Get the Title String.\n                Str.get_string('modaltitle', 'tool_trigger').then(function(title) {\n                    // Create the Modal.\n                    ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: title,\n                        body: spinner,\n                        large: true\n                    }, $('#id_stepmodalbutton'))\n                    .done(function(modal) {\n                        modalObj = modal;\n                        modalObj.getRoot().on(ModalEvents.save, processModalForm);\n                        modalObj.getRoot().on(ModalEvents.hidden, updateModalBody);\n                        setupModalChangeHandlers();\n                        updateModalBody();\n                    });\n                });\n\n                // Setup click handlers on the edit/delete icons in the steps table.\n                setupTableHandlers();\n            };\n\n            return StepSelect;\n        });"],"file":"step_select.min.js"}